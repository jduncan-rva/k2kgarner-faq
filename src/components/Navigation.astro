---
const navItems = [
  { href: '#faq', label: 'FAQ' },
  { href: '#location', label: 'Location' },
  { href: '#contact', label: 'Contact' },
];
---

<header class="bg-white shadow-sm sticky top-0 z-50">
  <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo/Brand -->
      <div class="flex-shrink-0">
        <a href="/" class="flex items-center gap-2">
          <img src="/images/K2K Logo - Blue.png" alt="Kid to Kid" class="h-10" />
          <span class="text-lg font-semibold text-charcoal">Garner</span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex md:space-x-8">
        {navItems.map(item => (
          <a
            href={item.href}
            class="inline-flex items-center px-1 pt-1 text-sm font-medium transition-colors text-charcoal hover:text-k2k-blue scroll-link"
          >
            {item.label}
          </a>
        ))}
      </div>

      <!-- CTA Button -->
      <div class="hidden md:flex">
        <a
          href="tel:919-322-2445"
          class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-lg text-white bg-k2k-blue hover:bg-deep-navy transition-colors"
        >
          Call Us
        </a>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button
          id="mobile-menu-button"
          type="button"
          class="inline-flex items-center justify-center p-2 rounded-md text-charcoal hover:text-k2k-blue hover:bg-light-gray focus:outline-none focus:ring-2 focus:ring-inset focus:ring-k2k-blue"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Open main menu</span>
          <!-- Hamburger icon -->
          <svg class="block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
          </svg>
          <!-- Close icon (hidden by default) -->
          <svg class="hidden h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <div class="hidden md:hidden" id="mobile-menu">
      <div class="pt-2 pb-3 space-y-1">
        {navItems.map(item => (
          <a
            href={item.href}
            class="block pl-3 pr-4 py-2 border-l-4 text-base font-medium border-transparent text-charcoal hover:bg-light-gray hover:border-gray-300 hover:text-k2k-blue scroll-link"
          >
            {item.label}
          </a>
        ))}
        <a
          href="tel:919-322-2445"
          class="block pl-3 pr-4 py-2 text-base font-medium text-k2k-blue border-l-4 border-transparent hover:bg-light-gray"
        >
          Call: 919-322-2445
        </a>
      </div>
    </div>
  </nav>
</header>

<script>
  // Mobile menu toggle
  const button = document.getElementById('mobile-menu-button');
  const menu = document.getElementById('mobile-menu');

  button?.addEventListener('click', () => {
    const expanded = button.getAttribute('aria-expanded') === 'true';
    button.setAttribute('aria-expanded', String(!expanded));
    menu?.classList.toggle('hidden');
  });

  // Smooth scroll for anchor links
  document.querySelectorAll('.scroll-link').forEach(link => {
    link.addEventListener('click', (e) => {
      e.preventDefault();
      const href = link.getAttribute('href');
      if (href && href.startsWith('#')) {
        const target = document.querySelector(href);
        if (target) {
          // Close mobile menu if open
          menu?.classList.add('hidden');
          button?.setAttribute('aria-expanded', 'false');

          // Scroll to target with offset for fixed header
          const headerOffset = 80;
          const elementPosition = target.getBoundingClientRect().top;
          const offsetPosition = elementPosition + window.pageYOffset - headerOffset;

          window.scrollTo({
            top: offsetPosition,
            behavior: 'smooth'
          });
        }
      }
    });
  });
</script>
